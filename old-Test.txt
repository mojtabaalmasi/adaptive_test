@app.route('/test', methods=['GET', 'POST'])
def test():
    if 'participant_id' not in session:
        return redirect(url_for('index'))

    if 'answered_questions' not in session:
        return redirect(url_for('index'))

    answered = list(map(int, session.get('answered_questions', [])))
    responses = list(map(int, session.get('responses', [])))
    theta = float(session.get('theta', 0.0))

    all_item_params = get_all_item_params()
    total_questions = len(all_item_params)

    MIN_QUESTIONS = 5
    MAX_QUESTIONS = 30
    THETA_CHANGE_THRESHOLD = 0.05

    if request.method == 'POST':
        selected_option = request.form.get('answer')
        if selected_option is None:
            current_q_index = answered[-1] if answered else 0
            question = get_question_by_id(current_q_index + 1)
            progress = int(len(answered) / total_questions * 100)
            return render_template('test.html', question=question, error="لطفا یک گزینه را انتخاب کنید.", progress=progress)

        responses.append(int(selected_option))

        # تخمین تتای جدید
        answered_params = [all_item_params[i] for i in answered]
        old_theta = theta
        theta = estimate_theta_mle(responses, answered_params)
        theta_change = abs(theta - old_theta)

        # ذخیره پاسخ در دیتابیس
        db = get_db_connection()
        cursor = db.cursor()
        participant_id = session['participant_id']
        current_question_id = answered[-1] + 1
        cursor.execute(
            "INSERT INTO answers (user_id, question_id, response) VALUES (?, ?, ?)",
            (participant_id, current_question_id, int(selected_option))
        )
        db.commit()

        # بررسی پایان آزمون
        num_answered = len(answered) + 1  # چون هنوز سوال جدید اضافه نشده
        if (num_answered >= MIN_QUESTIONS and theta_change < THETA_CHANGE_THRESHOLD) or num_answered >= MAX_QUESTIONS:
            # ذخیره نمره نهایی در جدول user_results
            cursor.execute("SELECT id FROM user_results WHERE user_id = ?", (participant_id,))
            existing = cursor.fetchone()
            if existing:
                cursor.execute("UPDATE user_results SET theta = ? WHERE user_id = ?", (theta, participant_id))
            else:
                cursor.execute("INSERT INTO user_results (user_id, theta) VALUES (?, ?)", (participant_id, theta))
            db.commit()

            # ذخیره در session
            session['theta'] = float(theta)
            session['answered_questions'] = list(map(int, answered))
            session['responses'] = list(map(int, responses))
            return redirect(url_for('result'))

        # انتخاب سوال بعدی
        next_q = select_next_question(theta, all_item_params, answered)
        if next_q is None:
            if next_q is None:
                print("هیچ سوال جدیدی برای انتخاب وجود ندارد، رفتن به نتیجه.")
            session['theta'] = float(theta)
            session['answered_questions'] = list(map(int, answered))
            session['responses'] = list(map(int, responses))
            return redirect(url_for('result'))

        answered.append(next_q)

        # به‌روزرسانی session
        session['answered_questions'] = list(map(int, answered))
        session['responses'] = list(map(int, responses))
        session['theta'] = float(theta)
        session.modified = True

        question = get_question_by_id(next_q + 1)
        progress = int(len(answered) / total_questions * 100)
        return render_template('test.html', question=question, progress=progress)

    # حالت GET برای اولین بار
    if not answered:
        next_q = 0
        answered.append(next_q)
        session['answered_questions'] = list(map(int, answered))
        session.modified = True
    else:
        next_q = answered[-1]

    question = get_question_by_id(next_q + 1)
    progress = int(len(answered) / total_questions * 100)
    return render_template('test.html', question=question, progress=progress)
